'''
Created on Dec 4, 2012

__author__ = "Elizabeth 'pidge' Flanagan"
__copyright__ = "Copyright 2013, Intel Corp."
__credits__ = ["Elizabeth Flanagan"]
__license__ = "GPL"
__version__ = "2.0"
__maintainer__ = "Elizabeth Flanagan"
__email__ = "elizabeth.flanagan@intel.com"
'''
#!/usr/bin/python
from config import *

class Autobuilder:
    def __init__(self, cfile=None):
        yocto_sources = YOCTO_SOURCES
        yocto_sched = YOCTO_SCHED
        yocto_builders = YOCTO_BUILDERS
        yocto_projname = YOCTO_PROJNAME
        yocto_projurl = YOCTO_PROJURL
        import os, config
        if cfile is None:
            try:
                self.cfile = os.environ.get("YOCTO_AB_CONFIG")
            except:
                self.cfile = "./config/yoctoAB.conf"

    def parseConfig(self):
        import ConfigParser
        print "LOADING CONFIG FILE"
        config = ConfigParser.ConfigParser()
        try:
            config.read(self.cfile)
        except:
            print "Can't seem to find the Config file. Is YOCTO_AB_CONFIG set?"
        buildsets=config.sections()
        self.configdict = {}
        for section in buildsets:
            self.configdict[section]= dict(config.items(section))
        return self.configdict

    def createBuildsets(self):
        import BuildSet
        import ast
        from buildbot.schedulers.forcesched import ForceScheduler
        for key in self.configdict.iterkeys():
            if str(key) != "BuildSets":
                locals()['buildset_%s' % key]=BuildSet.BuildSet(name=key,
                                                                steps=ast.literal_eval(self.configdict[key]['steps']), 
                                                                builders=ast.literal_eval(self.configdict[key]['builders']), 
                                                                layers=ast.literal_eval(self.configdict[key]['layers']))
                yocto_sched=YOCTO_SCHED
                yocto_sched.append(ForceScheduler(
                                    name=str(key),
                                    builderNames=['%s' % key]))

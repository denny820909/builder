'''
Created on Jan 6, 2013

__author__ = "Elizabeth 'pidge' Flanagan"
__copyright__ = "Copyright 2012-2013, Intel Corp."
__credits__ = ["Elizabeth Flanagan"]
__license__ = "GPL"
__version__ = "2.0"
__maintainer__ = "Elizabeth Flanagan"
__email__ = "elizabeth.flanagan@intel.com"
'''


from buildbot.steps.shell import ShellCommand
from buildbot.process.buildstep import LogLineObserver
import os

class BuildImages(ShellCommand):
    haltOnFailure = False 
    flunkOnFailure = True 
    name = "Building Images" 
    def __init__(self, factory, argdict=None, **kwargs):
        self.images=""
        self._pendingLogObservers = []
        self.factory = factory
        counter = ErrorCounter()
        self.addLogObserver('stdio', counter)
        self.useProgress = True
        self.progressMetrics += ('errors',)
        for k, v in argdict.iteritems():
            setattr(self, k, v)
        self.description = "Building Images"
        self.timeout = 25000
        self.command = ". ./oe-init-build-env; bitbake " + self.images
        ShellCommand.__init__(self, **kwargs)

class ErrorCounter(LogLineObserver):
    numErrors = 0
    finished = False

    def outLineReceived(self, line):
        if self.finished:
            return
        if line.startswith("=" * 40):
            self.finished = True
            return
        if "NOTE: " in line and " Failed" in line:
            self.numErrors += 1
            self.step.setProgress('errors', self.numErrors)


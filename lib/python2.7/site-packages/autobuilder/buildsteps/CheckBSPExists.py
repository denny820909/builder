'''
Created on March 18th, 2014
__author__ = "Elizabeth 'pidge' Flanagan"
__copyright__ = "Copyright 2013, Intel Corp."
__credits__ = ["Elizabeth Flanagan"]
__license__ = "GPL"
__version__ = "2.0"
__maintainer__ = "Elizabeth Flanagan"
__email__ = "elizabeth.flanagan@intel.com"
'''
from buildbot.process.buildstep import BuildStep, LoggingBuildStep
from buildbot.process.build import Build
from buildbot.status.results import SUCCESS
from buildbot.process.properties import WithProperties
from twisted.python import log
from autobuilder.config import *

class CheckBSPExists(LoggingBuildStep):
    haltOnFailure = False
    flunkOnFailure = False
    name = "ResolveLayerHead"
    def __init__(self, factory, argdict=None, **kwargs):
        self.description = "Check if BSP Exists"
        for k, v in argdict.iteritems():
            setattr(self, k, v)
        LoggingBuildStep.__init__(self, **kwargs)

    def start(self):
        # layerversion_metaintel values:
        # 1: removed: chiefriver
        #            sys940x
        #            n450
        self.layerversion_intel = self.getProperty("layerversion_intel")
        if self.layerversion_metaintel is not None and self > "1":
            self.finished(SUCCESS)
        else:
            self.finished(SUCCESS)
            self.build.stopBuild('STOPPED!')

    def describe(self, done=False):
        description = LoggingBuildStep.describe(self, done)
        if self.layerversion_intel is not None and self > "1":
            description = "This BSP exists in the branch. Building."
        else:
            description = "This BSP does not exists in the branch. Skipping."
        return description

'''
Created on Dec 17, 2012

__author__ = "Elizabeth 'pidge' Flanagan"
__copyright__ = "Copyright 2013, Intel Corp."
__credits__ = ["Elizabeth Flanagan"]
__license__ = "GPL"
__version__ = "2.0"
__maintainer__ = "Elizabeth Flanagan"
__email__ = "elizabeth.flanagan@intel.com"
'''

#!/usr/bin/python

from config import *
from twisted.python import log
from buildsteps import *
import ast
from buildsteps import *
from buildbot.process import factory as factory
from buildbot.steps.shell import ShellCommand
from buildbot.process.properties import WithProperties

class BuildSet():
    '''
    classdocs
    '''
    def __init__(self, name, layers, steps, builders):
        '''
        Constructor
        '''

        print "Creating BuildFactory for " + name + " buildset."
        locals()['f'+name] = factory.BuildFactory()
        
        for stepOrder in steps:
            for step in dict(stepOrder):
                factoryFN=getattr(locals()['f'+name], 'addStep')
                print "Creating a " + step + " for " + name  + "'s BuildSet."
                if step=="CheckOutLayers":
                # All steps need the factory passed as the first param
                    for layer in layers:
                        kwargs=stepOrder[step]
                        layername=layer.iterkeys().next()
                        if layername == "poky":
                            workdir = 'build'
                            method = 'clobber'
                            log.msg("setting workdir to build")
                        elif layername == "eclipse-poky":
                            workdir=os.path.join("build", layername)
                            method = 'clobber'
                            log.msg("setting workdir to build/" + layername)
                        else:
                            workdir=os.path.join("build", layername)
                            method = None
                            log.msg("setting workdir to build/" + layername)
                        m = __import__ (step)
                        func = getattr(m, step)
                        factoryFN(func(locals()['f'+name],
                                  layername=layername,
                                  method=method,
                                  workdir=workdir,
                                  argdict=layer[layer.iterkeys().next()]))
                elif step=="CreateBBLayersConf":
                    kwargs=stepOrder[step]
                    m = __import__ (step)
                    func = getattr(m, step)
                    factoryFN(func(locals()['f'+name], 
                              layers,
                              argdict=stepOrder[step]))
                else:
                    kwargs=stepOrder[step]
                    m = __import__ (step)
                    func = getattr(m, step)
                    factoryFN(func(locals()['f'+name],
                              argdict=stepOrder[step]))
                    
        locals()['b%s' % name] = {'name': name,
                            'slavenames': [builders],
                            'builddir': name,
                            'factory': locals()['f'+name],
                            }
        yocto_builders=YOCTO_BUILDERS
        yocto_builders.append(locals()['b%s' % name])


'''
Created on Dec 17, 2012

@author: pidge
'''
#!/usr/bin/python

class BuildSet():
    '''
    classdocs
    '''


    def __init__(self, name, layers, steps, builders):
        '''
        Constructor
        '''
        import config
        from twisted.python import log
        from Steps import Steps
        import ast
        from buildbot.process import factory
        from buildbot.process.properties import WithProperties
        from buildbot.process.buildstep import BuildStep, LoggingBuildStep, LoggedRemoteCommand, RemoteShellCommand
        print "Creating BuildFactory for " + name + " buildset."
        locals()['f'+name] = factory.BuildFactory()
        for stepOrder in steps:
            stepObj = Steps()
            for step in dict(stepOrder):
                if step=="checkoutLayers":
                    methodToCall=getattr(Steps, step)
                # All steps need the step object and factory passed as the first two params
                    methodToCall(stepObj, locals()['f'+name], layers=layers, **stepOrder[step])
                else:
                    methodToCall=getattr(Steps, step)
                # All steps need the step object and factory passed as the first two params
                    methodToCall(stepObj, locals()['f'+name], **stepOrder[step])
        locals()['b%s' % name] = {'name': name,
                            'slavenames': [builders],
                            'builddir': name,
                            'factory': 'f'+name,
                            }
